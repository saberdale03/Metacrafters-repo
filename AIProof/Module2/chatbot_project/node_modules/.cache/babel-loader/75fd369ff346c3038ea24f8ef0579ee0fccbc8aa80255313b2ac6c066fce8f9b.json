{"ast":null,"code":"var _jsxFileName = \"D:\\\\dale_\\\\Documents\\\\Codes\\\\PracticeCoding\\\\ReactJS\\\\chatbot\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Chatbot extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userMessage = event.target.elements.userInput.value;\n      //Set messages state\n      this.setState({\n        messages: [...this.state.messages, {\n          type: 'user',\n          message: userMessage\n        }]\n      });\n      event.target.elements.userInput.value = '';\n    };\n    this.state = {\n      messages: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: message.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userInput\",\n          placeholder: \"Type your message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Chatbot;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Chatbot","constructor","props","handleSubmit","event","preventDefault","userMessage","target","elements","userInput","value","setState","messages","state","type","message","render","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","placeholder"],"sources":["D:/dale_/Documents/Codes/PracticeCoding/ReactJS/chatbot/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\n\n class Chatbot extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    };\n  }\n\n  handleSubmit =(event)=> {\n    event.preventDefault();\n    const userMessage = event.target.elements.userInput.value\n    //Set messages state\n    this.setState({ messages: [...this.state.messages, { type: 'user', message: userMessage }] });\n    event.target.elements.userInput.value = ''\n  }\n  \n  render(){\n    return (\n      <div className=\"chatbot\">\n        <div className=\"chat-window\">\n          {this.state.messages.map((message, index) => (\n            <div key={index} className={`message ${message.type}`}>\n              {message.message}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"userInput\" placeholder=\"Type your message here\" />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n\n }\n\nexport default Chatbot;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAE/BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,YAAY,GAAGC,KAAK,IAAI;MACtBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,KAAK;MACzD;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAACC,KAAK,CAACD,QAAQ,EAAE;UAAEE,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAET;QAAY,CAAC;MAAE,CAAC,CAAC;MAC7FF,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,KAAK,GAAG,EAAE;IAC5C,CAAC;IAXC,IAAI,CAACG,KAAK,GAAG;MACXD,QAAQ,EAAE;IACZ,CAAC;EACH;EAUAI,MAAMA,CAAA,EAAE;IACN,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBnB,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzB,IAAI,CAACL,KAAK,CAACD,QAAQ,CAACO,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBACtCrB,OAAA;UAAiBkB,SAAS,EAAG,WAAUF,OAAO,CAACD,IAAK,EAAE;UAAAI,QAAA,EACnDH,OAAO,CAACA;QAAO,GADRK,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzB,OAAA;QAAM0B,QAAQ,EAAE,IAAI,CAACtB,YAAa;QAAAe,QAAA,gBAChCnB,OAAA;UAAOe,IAAI,EAAC,MAAM;UAACY,IAAI,EAAC,WAAW;UAACC,WAAW,EAAC;QAAwB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3EzB,OAAA;UAAQe,IAAI,EAAC,QAAQ;UAAAI,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;AAED;AAED,eAAexB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}