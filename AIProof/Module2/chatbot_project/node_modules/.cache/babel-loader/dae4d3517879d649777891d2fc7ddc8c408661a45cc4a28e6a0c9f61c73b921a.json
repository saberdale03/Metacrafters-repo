{"ast":null,"code":"var _jsxFileName = \"D:\\\\dale_\\\\Documents\\\\Codes\\\\PracticeCoding\\\\ReactJS\\\\chatbot\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Chatbot extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userMessage = event.target.elements.userInput.value;\n      //Set messages state\n      this.setState({\n        messages: [...this.state.messages, {\n          type: 'user',\n          message: userMessage\n        }]\n      });\n      event.target.elements.userInput.value = '';\n    };\n    this.state = {\n      messages: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: message.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userInput\",\n          placeholder: \"Type your message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const message = this.state.inputValue.trim();\n    if (message !== \"\") {\n      const apiUrl = \"https://api.openai.com/v1/engines/davinci-codex/completions\";\n      const prompt = this.state.prompt + message;\n      const payload = {\n        prompt: prompt,\n        max_tokens: 60,\n        temperature: 0.7,\n        n: 1,\n        stop: \"\\n\"\n      };\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n      };\n      axios.post(apiUrl, payload, {\n        headers\n      }).then(res => {\n        const botMessage = res.data.choices[0].text.trim();\n        this.setState({\n          messages: [...this.state.messages, {\n            type: \"user\",\n            text: message\n          }],\n          inputValue: \"\",\n          prompt: prompt + botMessage\n        }, () => {\n          this.scrollToBottom();\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n}\nexport default Chatbot;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Chatbot","constructor","props","handleSubmit","event","preventDefault","userMessage","target","elements","userInput","value","setState","messages","state","type","message","render","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","placeholder","e","inputValue","trim","apiUrl","prompt","payload","max_tokens","temperature","n","stop","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","post","then","res","botMessage","data","choices","text","scrollToBottom","catch","error","console","log"],"sources":["D:/dale_/Documents/Codes/PracticeCoding/ReactJS/chatbot/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\"\n\n class Chatbot extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    };\n  }\n\n  handleSubmit =(event)=> {\n    event.preventDefault();\n    const userMessage = event.target.elements.userInput.value\n    //Set messages state\n    this.setState({ messages: [...this.state.messages, { type: 'user', message: userMessage }] });\n    event.target.elements.userInput.value = ''\n  }\n  \n  render(){\n    return (\n      <div className=\"chatbot\">\n        <div className=\"chat-window\">\n          {this.state.messages.map((message, index) => (\n            <div key={index} className={`message ${message.type}`}>\n              {message.message}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"userInput\" placeholder=\"Type your message here\" />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const message = this.state.inputValue.trim();\n    if (message !== \"\") {\n      const apiUrl = \"https://api.openai.com/v1/engines/davinci-codex/completions\";\n      const prompt = this.state.prompt + message;\n      const payload = {\n        prompt: prompt,\n        max_tokens: 60,\n        temperature: 0.7,\n        n: 1,\n        stop: \"\\n\"\n      };\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n      };\n      axios.post(apiUrl, payload, { headers })\n        .then(res => {\n          const botMessage = res.data.choices[0].text.trim();\n          this.setState({\n            messages: [...this.state.messages, { type: \"user\", text: message }],\n            inputValue: \"\",\n            prompt: prompt + botMessage\n          }, () => {\n            this.scrollToBottom();\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n }\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}